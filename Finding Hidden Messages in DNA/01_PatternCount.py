'''Implement PatternCount (reproduced below).
     Input: Strings Text and Pattern.
     Output: Count(Text, Pattern).

PatternCount(Text, Pattern)
  count ← 0
  for i ← 0 to |Text| − |Pattern|
    if Text(i, |Pattern|) = Pattern
      count ← count + 1
  return count'''

import os 

def PatternCount(Text, Pattern):
    count = 0
    for i in range(0, len(Text) - len(Pattern) + 1):
        if Text[i:i + len(Pattern)] == Pattern:
            count += 1
    return count

if __name__ == "__main__":
    # for i in range(6):
    #     file_input = open(f"PatternCount/inputs/input_{i + 1}.txt")
    #     file_input_text = file_input.readlines()
    #     Text, Pattern = file_input_text[0].strip(), file_input_text[1].strip()
    #     file_output = open(f"PatternCount/outputs/output_{i + 1}.txt")
    #     file_output_text = file_output.read().strip()
    #     if int(file_output_text) == PatternCount(Text, Pattern):
    #         print("yes")
    #     else:
    #         print(f"{i+1} no")
    Text = "TAACGGCTAACGGCAGGATAACGGCCCGTGTAACGGCTTAACGGCGCGTTAACGGCAATAACGGCAATCTAACGGCTAACGGCTAACGGCTAACGGCTAACGGCAGGGGAAACATAACGGCTAACGGCGGTAACGGCTAACGGCCCTAACGGCTGCATAACGGCGTAACGGCAGGTAACGGCGAAAGCTTCTAACGGCTAACGGCCAATAACGGCTCTTATAACGGCTAACGGCGCCGTAACGGCCTAACGGCAAGTAACGGCATAACGGCTAACGGCTTTAACGGCTAACGGCACATAACGGCTGATGCTAACGGCAGCCCTAACGGCCTAACGGCTTAACGGCGGGCTAACGGCTGGCTCGTAACGGCTAACGGCTAACGGCATCTAACGGCCTAACGGCTGTATAACGGCCAATCATTTAACGGCCGTCCGTAACGGCGTAACGGCTAACGGCACTTAACGGCCTAACGGCTTCCTTAACGGCGGTGTAACGGCCAGTGGTAACGGCACTAACGGCCTAACGGCTGCAATAACGGCTGTTAACGGCTAACGGCTAACGGCGACCTAACGGCAAGTAACGGCTAACGGCATCCGTAACGGCTAACGGCTGTAACGGCGGCTAACGGCGAGAATAACGGCTGGGATAACGGCAGCAAAAATAACGGCTAACGGCCTGTTAACGGCCTTAACGGCCGTTAACGGCGTCATTTTGTAACGGCTCGAATAACGGCTAACGGCGTAACGGCATAACGGCACATTAACGGCTAACGGCCGAGCTTAACGGCGCCTAACGGCATAACGGCTAACGGCACATAACGGCTAACGGCTGATTAACGGCCTAACGGCTTAACGGCGTAACGGCTTAACGGCGTGACATAACGGCATAACGGCATAACGGCGTAACGGCTTAACGGCTAACGGCTAACGGCTAACGGCGTAGACAAACTAACGGCTAACGGCGGTTCCAGCTAACGGC"
    Pattern = "TAACGGCTA"
    print(PatternCount(Text, Pattern))
    print(PatternCount("CGCGATACGTTACATACATGATAGACCGCGCGCGATCATATCGCGATTATC", "CGCG"))

